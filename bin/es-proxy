#!/bin/bash

instance() {
  docker ps -qf "name=es-proxy-$1"
}

started() {
  sg open all $PORT
  echo "Proxying http://${DEV_PREFIX}.dev.rdc.library.northwestern.edu:$PORT/ to $1 cluster in $AWS_REGION"
  echo "OpenSearch Dashboards available on http://${DEV_PREFIX}.dev.rdc.library.northwestern.edu:$PORT/_dashboards"
}

stopped() {
  sg close all $PORT
  echo "Proxy to $1 cluster stopped"
}

start-dev() {
  cid=$(instance "dev")
  if [[ -n "$cid" ]]; then
    echo "es-proxy already running for dev cluster"
  else
    output=$(docker run --name es-proxy-dev --rm -d \
      -v $(dirname $0)/../helpers/es-proxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro \
      -p $PORT:9200 haproxy:2.4-alpine)
    if [[ $? == 0 ]]; then
      started dev
    else
      echo $output
    fi
  fi
}

stop-dev() {
  cid=$(instance "dev")
  if [[ -n "$cid" ]]; then
    docker stop $cid
    stopped dev
  else
    echo "es-proxy not running for dev cluster"
  fi
}

start-profile() {
  SHORT_PROFILE=$(cut -d "-" -f 1 <<< $AWS_PROFILE)
  cid=$(instance $SHORT_PROFILE)
  if [[ -n "$cid" ]]; then
    echo "es-proxy already running for $SHORT_PROFILE cluster"
  else
    aws --profile $AWS_PROFILE sts get-caller-identity --no-cli-pager > /dev/null 2>&1 || aws --profile $AWS_PROFILE sso login
    ES_CONFIG=$(aws --profile $AWS_PROFILE secretsmanager get-secret-value --secret-id "${SHORT_PROFILE}/infrastructure/index" --query "SecretString" --output text)
    ENDPOINT=$(jq -r '.endpoint' <<< $ES_CONFIG)

    CREDENTIALS=$(aws configure export-credentials --format process)
    AWS_ACCESS_KEY_ID=$(jq -r '.AccessKeyId' <<< $CREDENTIALS)
    AWS_SECRET_ACCESS_KEY=$(jq -r '.SecretAccessKey' <<< $CREDENTIALS)
    AWS_SESSION_TOKEN=$(jq -r '.SessionToken' <<< $CREDENTIALS)
    
    output=$(docker run --rm \
      --name es-proxy-$SHORT_PROFILE \
      -d \
      -e AWS_REGION=$AWS_REGION \
      -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
      -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
      -e AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN \
      -p $PORT:8080 cllunsford/aws-signing-proxy -target $ENDPOINT > /dev/null)

    if [[ $? == 0 ]]; then
      started $SHORT_PROFILE
    else
      echo $output
    fi
  fi
}

stop-profile() {
  SHORT_PROFILE=$(cut -d "-" -f 1 <<< $AWS_PROFILE)
  cid=$(instance $SHORT_PROFILE)
  if [[ -n "$cid" ]]; then
    docker stop $cid > /dev/null
    stopped $SHORT_PROFILE
  else
    echo "Proxy not running for $SHORT_PROFILE cluster"
  fi
}

if [[ -z $AWS_PROFILE ]]; then
  type=dev
else
  type=profile
fi
PORT=${PORT:-9200}
AWS_REGION=${AWS_REGION:-us-east-1}

case "$1" in
  start)
    start-$type
    ;;
  stop)
    stop-$type
    ;;
esac