#!/bin/bash -e
if [[ -n $DEBUG ]]; then set -x; fi
INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
TAG_DATA=$(aws ec2 describe-tags --filters Name=resource-id,Values=$INSTANCE_ID)
OWNER=$(jq -r '.Tags[] | select(.Key == "Owner") | .Value' <<< $TAG_DATA)
COMMON_CONFIG=$(aws secretsmanager get-secret-value --secret-id "dev-environment/terraform/common" --query "SecretString" --output text)
SHARED_BUCKET=$(jq -r .shared_bucket_arn <<< $COMMON_CONFIG | rev | cut -d ':' -f1 | rev)
FILE=${2:-${OWNER}}.tar.bz2
case $1 in
  backup)
    echo "Creating tarball of $HOME in /tmp/$FILE..."
    tar cjf /tmp/$FILE -C $HOME --exclude-ignore=$HOME/.nul-rdc-devtools/helpers/homeignore .
    aws s3 cp /tmp/$FILE s3://$SHARED_BUCKET/homes/$FILE
    rm /tmp/$FILE
    ;;
  restore)
    if aws s3 ls s3://$SHARED_BUCKET/homes/$FILE > /dev/null; then
      echo "Retrieving and extracting $FILE to $HOME..."
      aws s3 cp s3://$SHARED_BUCKET/homes/$FILE - | tar xj -C $HOME
    else
      echo "s3://$SHARED_BUCKET/homes/$FILE not found. Skipping restore."
    fi  
    ;;
  delete)
    aws s3 rm s3://$SHARED_BUCKET/homes/$FILE
    ;;
  *)
    echo "Unknown command: $1"
    echo "USAGE: $0 <backup|restore> [basename]"
    ;;
esac
